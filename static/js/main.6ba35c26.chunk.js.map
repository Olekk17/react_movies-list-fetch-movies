{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","App.constants.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","React","memo","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","onAdd","useState","setQuery","setMovie","errorMessage","setErrorMessage","isLoading","setIsLoading","handleSubmit","event","a","preventDefault","preparedQuery","toLowerCase","trim","length","movieData","Poster","tempMovie","Title","Plot","imdbID","isAddButtonDisabled","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","handleMovieAdd","useCallback","newMovie","prevMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ba35c26.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = React.memo(({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n));\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = React.memo(({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n));\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=72c3d8bf';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","/* eslint-disable max-len */\n\nexport const BASE_IMDB_LINK = 'https://www.imdb.com/title/';\nexport const DEFAULT_IMAGE_LINK = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { BASE_IMDB_LINK, DEFAULT_IMAGE_LINK } from '../../App.constants';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = React.memo(({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    const preparedQuery = query.toLowerCase().trim();\n\n    if (preparedQuery.length === 0) {\n      setErrorMessage('Movie name can\\'t be empty or consist only of spaces');\n      setIsLoading(false);\n\n      return;\n    }\n\n    const movieData = await getMovie(preparedQuery);\n\n    if ('Error' in movieData) {\n      setErrorMessage('Can\\'t find a movie with such a title');\n      setMovie(null);\n      setIsLoading(false);\n\n      return;\n    }\n\n    const imgUrl = movieData.Poster !== 'N/A'\n      ? movieData.Poster\n      : DEFAULT_IMAGE_LINK;\n\n    const tempMovie: Movie = {\n      title: movieData.Title,\n      description: movieData.Plot,\n      imgUrl,\n      imdbUrl: `${BASE_IMDB_LINK}${movieData.imdbID}`,\n      imdbId: movieData.imdbID,\n    };\n\n    if (movie?.imdbId !== tempMovie.imdbId) {\n      setMovie(tempMovie);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setErrorMessage('');\n  };\n\n  const handleAdd = (movieToAdd: Movie) => {\n    onAdd(movieToAdd);\n    setMovie(null);\n    setQuery('');\n  };\n\n  const isAddButtonDisabled = !query.length || !!errorMessage.length;\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={isAddButtonDisabled}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAdd(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n});\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleMovieAdd = useCallback((newMovie: Movie) => {\n    setMovies(prevMovies => {\n      if (prevMovies.some(({ imdbId }) => imdbId === newMovie.imdbId)) {\n        return prevMovies;\n      }\n\n      return [...prevMovies, newMovie];\n    });\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={handleMovieAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}